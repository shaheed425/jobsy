{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{Container,Row,Col,Card,Table,Badge,Button}from'react-bootstrap';import{Link}from'react-router-dom';import{AppContext}from'../../App';import{StudentService}from'../../domain/studentService';import{EmployerService}from'../../domain/employerService';import{JobService}from'../../domain/jobService';import{ApplicationService}from'../../domain/applicationService';import{NotificationService}from'../../domain/notificationService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Dashboard=()=>{const{user,userType}=useContext(AppContext);const[dashboardData,setDashboardData]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{loadDashboardData();},[userType,user]);const loadDashboardData=async()=>{try{setLoading(true);let data={};if(userType==='admin'){const[students,employers,jobs,applications,notifications]=await Promise.all([StudentService.getAllStudents(),EmployerService.getAllEmployers(),JobService.getAllJobs(),ApplicationService.getAllApplications(),NotificationService.getAllNotifications()]);data={totalStudents:students.length,eligibleStudents:students.filter(s=>s.isEligible).length,totalEmployers:employers.length,verifiedEmployers:employers.filter(e=>e.isVerified).length,totalJobs:jobs.length,activeJobs:jobs.filter(j=>j.status==='active').length,totalApplications:applications.length,recentApplications:applications.slice(-5),recentJobs:jobs.slice(-5),recentNotifications:notifications.slice(-10)};}else if(userType==='student'){const[studentProfile,applications,jobs,notifications]=await Promise.all([StudentService.getStudentById(user.id),ApplicationService.getApplicationsByStudent(user.id),JobService.getJobsForStudent(user.id),NotificationService.getNotificationsForRecipient('student',user.id)]);data={profile:studentProfile,totalApplications:applications.length,pendingApplications:applications.filter(a=>a.status==='under_review').length,acceptedApplications:applications.filter(a=>a.status==='accepted').length,availableJobs:jobs.length,recentApplications:applications.slice(-5),recommendedJobs:jobs.slice(0,5),recentNotifications:notifications.slice(-5)};}else if(userType==='employer'){const dashboardInfo=await EmployerService.getEmployerDashboard(user.id);data=dashboardInfo;}setDashboardData(data);}catch(error){console.error('Failed to load dashboard data:',error);}finally{setLoading(false);}};const getStatusBadge=status=>{const statusConfig={'under_review':{bg:'warning',text:'Under Review'},'shortlisted':{bg:'info',text:'Shortlisted'},'accepted':{bg:'success',text:'Accepted'},'rejected':{bg:'danger',text:'Rejected'},'active':{bg:'success',text:'Active'},'inactive':{bg:'secondary',text:'Inactive'}};const config=statusConfig[status]||{bg:'secondary',text:status};return/*#__PURE__*/_jsx(Badge,{bg:config.bg,children:config.text});};if(loading){return/*#__PURE__*/_jsx(Container,{className:\"mt-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})})});}const renderAdminDashboard=()=>{var _dashboardData$recent;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:(dashboardData===null||dashboardData===void 0?void 0:dashboardData.totalStudents)||0}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Students\"}),/*#__PURE__*/_jsxs(\"small\",{children:[(dashboardData===null||dashboardData===void 0?void 0:dashboardData.eligibleStudents)||0,\" Eligible\"]})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:(dashboardData===null||dashboardData===void 0?void 0:dashboardData.totalEmployers)||0}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Employers\"}),/*#__PURE__*/_jsxs(\"small\",{children:[(dashboardData===null||dashboardData===void 0?void 0:dashboardData.verifiedEmployers)||0,\" Verified\"]})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:(dashboardData===null||dashboardData===void 0?void 0:dashboardData.totalJobs)||0}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Jobs\"}),/*#__PURE__*/_jsxs(\"small\",{children:[(dashboardData===null||dashboardData===void 0?void 0:dashboardData.activeJobs)||0,\" Active\"]})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.totalApplications}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Applications\"})]})})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Recent Applications\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Student\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Job\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dashboardData.recentApplications.map(app=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:app.studentName}),/*#__PURE__*/_jsx(\"td\",{children:app.jobTitle}),/*#__PURE__*/_jsx(\"td\",{children:getStatusBadge(app.status)}),/*#__PURE__*/_jsx(\"td\",{children:new Date(app.applicationDate).toLocaleDateString()})]},app.id))})]})})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Recent Job Postings\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Job Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Company\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Applications\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dashboardData===null||dashboardData===void 0?void 0:(_dashboardData$recent=dashboardData.recentJobs)===null||_dashboardData$recent===void 0?void 0:_dashboardData$recent.map(job=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"/job/\".concat(job.id),className:\"text-decoration-none\",children:job.title})}),/*#__PURE__*/_jsx(\"td\",{children:job.company}),/*#__PURE__*/_jsx(\"td\",{children:getStatusBadge(job.status)}),/*#__PURE__*/_jsx(\"td\",{children:job.applicationsReceived})]},job.id))})]})})]})})]})]});};const renderStudentDashboard=()=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.totalApplications}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Applications\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.pendingApplications}),/*#__PURE__*/_jsx(\"p\",{children:\"Pending\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.acceptedApplications}),/*#__PURE__*/_jsx(\"p\",{children:\"Accepted\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.availableJobs}),/*#__PURE__*/_jsx(\"p\",{children:\"Available Jobs\"})]})})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"My Recent Applications\"})}),/*#__PURE__*/_jsx(Card.Body,{children:dashboardData.recentApplications.length>0?/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Job Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Company\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dashboardData.recentApplications.map(app=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:app.jobTitle}),/*#__PURE__*/_jsx(\"td\",{children:app.company}),/*#__PURE__*/_jsx(\"td\",{children:getStatusBadge(app.status)}),/*#__PURE__*/_jsx(\"td\",{children:new Date(app.applicationDate).toLocaleDateString()})]},app.id))})]}):/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted\",children:[\"No applications yet. \",/*#__PURE__*/_jsx(Link,{to:\"/jobs\",children:\"Browse jobs\"}),\" to get started!\"]})})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Recommended Jobs\"})}),/*#__PURE__*/_jsx(Card.Body,{children:dashboardData.recommendedJobs.length>0?dashboardData.recommendedJobs.map(job=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-bottom pb-2 mb-2\",children:[/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsx(Link,{to:\"/job/\".concat(job.id),className:\"text-decoration-none\",children:job.title})}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[job.company,\" \\u2022 \",job.location]})]},job.id)):/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Complete your profile to get personalized job recommendations.\"})})]})})]})]});const renderEmployerDashboard=()=>/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.totalJobs}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Jobs Posted\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.activeJobs}),/*#__PURE__*/_jsx(\"p\",{children:\"Active Jobs\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.totalApplications}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Applications\"})]})})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(Card,{className:\"stat-card text-center\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h3\",{children:dashboardData.applicationsByStatus.shortlisted}),/*#__PURE__*/_jsx(\"p\",{children:\"Shortlisted\"})]})})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Recent Applications\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Student\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Job\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dashboardData.recentApplications.map(app=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:app.studentName}),/*#__PURE__*/_jsx(\"td\",{children:app.jobTitle}),/*#__PURE__*/_jsx(\"td\",{children:getStatusBadge(app.status)}),/*#__PURE__*/_jsx(\"td\",{children:new Date(app.applicationDate).toLocaleDateString()})]},app.id))})]})})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"My Job Postings\"})}),/*#__PURE__*/_jsx(Card.Body,{children:dashboardData.recentJobs.map(job=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-bottom pb-2 mb-2\",children:[/*#__PURE__*/_jsx(\"h6\",{children:/*#__PURE__*/_jsx(Link,{to:\"/job/\".concat(job.id),className:\"text-decoration-none\",children:job.title})}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[job.applicationsReceived,\" applications \\u2022 Posted \",new Date(job.postedDate).toLocaleDateString()]})]},job.id))})]})})]})]});return/*#__PURE__*/_jsxs(Container,{className:\"mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:\"Welcome back, \"}),/*#__PURE__*/_jsx(\"strong\",{children:(user===null||user===void 0?void 0:user.name)||(user===null||user===void 0?void 0:user.username)||(user===null||user===void 0?void 0:user.companyName)})]})]}),userType==='admin'&&renderAdminDashboard(),userType==='student'&&renderStudentDashboard(),userType==='employer'&&renderEmployerDashboard()]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useContext","Container","Row","Col","Card","Table","Badge","Button","Link","AppContext","StudentService","EmployerService","JobService","ApplicationService","NotificationService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","user","userType","dashboardData","setDashboardData","loading","setLoading","loadDashboardData","data","students","employers","jobs","applications","notifications","Promise","all","getAllStudents","getAllEmployers","getAllJobs","getAllApplications","getAllNotifications","totalStudents","length","eligibleStudents","filter","s","isEligible","totalEmployers","verifiedEmployers","e","isVerified","totalJobs","activeJobs","j","status","totalApplications","recentApplications","slice","recentJobs","recentNotifications","studentProfile","getStudentById","id","getApplicationsByStudent","getJobsForStudent","getNotificationsForRecipient","profile","pendingApplications","a","acceptedApplications","availableJobs","recommendedJobs","dashboardInfo","getEmployerDashboard","error","console","getStatusBadge","statusConfig","bg","text","config","children","className","role","renderAdminDashboard","_dashboardData$recent","md","Body","Header","responsive","map","app","studentName","jobTitle","Date","applicationDate","toLocaleDateString","job","to","concat","title","company","applicationsReceived","renderStudentDashboard","location","renderEmployerDashboard","applicationsByStatus","shortlisted","postedDate","name","username","companyName"],"sources":["D:/jobsy/frontend/src/presentation/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Col, Card, Table, Badge, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../App';\nimport { StudentService } from '../../domain/studentService';\nimport { EmployerService } from '../../domain/employerService';\nimport { JobService } from '../../domain/jobService';\nimport { ApplicationService } from '../../domain/applicationService';\nimport { NotificationService } from '../../domain/notificationService';\n\nconst Dashboard = () => {\n  const { user, userType } = useContext(AppContext);\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, [userType, user]);\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      let data = {};\n\n      if (userType === 'admin') {\n        const [students, employers, jobs, applications, notifications] = await Promise.all([\n          StudentService.getAllStudents(),\n          EmployerService.getAllEmployers(),\n          JobService.getAllJobs(),\n          ApplicationService.getAllApplications(),\n          NotificationService.getAllNotifications()\n        ]);\n\n        data = {\n          totalStudents: students.length,\n          eligibleStudents: students.filter(s => s.isEligible).length,\n          totalEmployers: employers.length,\n          verifiedEmployers: employers.filter(e => e.isVerified).length,\n          totalJobs: jobs.length,\n          activeJobs: jobs.filter(j => j.status === 'active').length,\n          totalApplications: applications.length,\n          recentApplications: applications.slice(-5),\n          recentJobs: jobs.slice(-5),\n          recentNotifications: notifications.slice(-10)\n        };\n      } else if (userType === 'student') {\n        const [studentProfile, applications, jobs, notifications] = await Promise.all([\n          StudentService.getStudentById(user.id),\n          ApplicationService.getApplicationsByStudent(user.id),\n          JobService.getJobsForStudent(user.id),\n          NotificationService.getNotificationsForRecipient('student', user.id)\n        ]);\n\n        data = {\n          profile: studentProfile,\n          totalApplications: applications.length,\n          pendingApplications: applications.filter(a => a.status === 'under_review').length,\n          acceptedApplications: applications.filter(a => a.status === 'accepted').length,\n          availableJobs: jobs.length,\n          recentApplications: applications.slice(-5),\n          recommendedJobs: jobs.slice(0, 5),\n          recentNotifications: notifications.slice(-5)\n        };\n      } else if (userType === 'employer') {\n        const dashboardInfo = await EmployerService.getEmployerDashboard(user.id);\n        data = dashboardInfo;\n      }\n\n      setDashboardData(data);\n    } catch (error) {\n      console.error('Failed to load dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusBadge = (status) => {\n    const statusConfig = {\n      'under_review': { bg: 'warning', text: 'Under Review' },\n      'shortlisted': { bg: 'info', text: 'Shortlisted' },\n      'accepted': { bg: 'success', text: 'Accepted' },\n      'rejected': { bg: 'danger', text: 'Rejected' },\n      'active': { bg: 'success', text: 'Active' },\n      'inactive': { bg: 'secondary', text: 'Inactive' }\n    };\n    \n    const config = statusConfig[status] || { bg: 'secondary', text: status };\n    return <Badge bg={config.bg}>{config.text}</Badge>;\n  };\n\n  if (loading) {\n    return (\n      <Container className=\"mt-4\">\n        <div className=\"text-center\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n\n  const renderAdminDashboard = () => (\n    <>\n      <Row className=\"mb-4\">\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData?.totalStudents || 0}</h3>\n              <p>Total Students</p>\n              <small>{dashboardData?.eligibleStudents || 0} Eligible</small>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData?.totalEmployers || 0}</h3>\n              <p>Total Employers</p>\n              <small>{dashboardData?.verifiedEmployers || 0} Verified</small>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData?.totalJobs || 0}</h3>\n              <p>Total Jobs</p>\n              <small>{dashboardData?.activeJobs || 0} Active</small>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.totalApplications}</h3>\n              <p>Total Applications</p>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Recent Applications</h5>\n            </Card.Header>\n            <Card.Body>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Student</th>\n                    <th>Job</th>\n                    <th>Status</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {dashboardData.recentApplications.map(app => (\n                    <tr key={app.id}>\n                      <td>{app.studentName}</td>\n                      <td>{app.jobTitle}</td>\n                      <td>{getStatusBadge(app.status)}</td>\n                      <td>{new Date(app.applicationDate).toLocaleDateString()}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={6}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Recent Job Postings</h5>\n            </Card.Header>\n            <Card.Body>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Job Title</th>\n                    <th>Company</th>\n                    <th>Status</th>\n                    <th>Applications</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {dashboardData?.recentJobs?.map(job => (\n                    <tr key={job.id}>\n                      <td>\n                        <Link to={`/job/${job.id}`} className=\"text-decoration-none\">\n                          {job.title}\n                        </Link>\n                      </td>\n                      <td>{job.company}</td>\n                      <td>{getStatusBadge(job.status)}</td>\n                      <td>{job.applicationsReceived}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const renderStudentDashboard = () => (\n    <>\n      <Row className=\"mb-4\">\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.totalApplications}</h3>\n              <p>Total Applications</p>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.pendingApplications}</h3>\n              <p>Pending</p>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.acceptedApplications}</h3>\n              <p>Accepted</p>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.availableJobs}</h3>\n              <p>Available Jobs</p>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">My Recent Applications</h5>\n            </Card.Header>\n            <Card.Body>\n              {dashboardData.recentApplications.length > 0 ? (\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>Job Title</th>\n                      <th>Company</th>\n                      <th>Status</th>\n                      <th>Date</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {dashboardData.recentApplications.map(app => (\n                      <tr key={app.id}>\n                        <td>{app.jobTitle}</td>\n                        <td>{app.company}</td>\n                        <td>{getStatusBadge(app.status)}</td>\n                        <td>{new Date(app.applicationDate).toLocaleDateString()}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              ) : (\n                <p className=\"text-muted\">No applications yet. <Link to=\"/jobs\">Browse jobs</Link> to get started!</p>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={6}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Recommended Jobs</h5>\n            </Card.Header>\n            <Card.Body>\n              {dashboardData.recommendedJobs.length > 0 ? (\n                dashboardData.recommendedJobs.map(job => (\n                  <div key={job.id} className=\"border-bottom pb-2 mb-2\">\n                    <h6>\n                      <Link to={`/job/${job.id}`} className=\"text-decoration-none\">\n                        {job.title}\n                      </Link>\n                    </h6>\n                    <small className=\"text-muted\">{job.company} • {job.location}</small>\n                  </div>\n                ))\n              ) : (\n                <p className=\"text-muted\">Complete your profile to get personalized job recommendations.</p>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const renderEmployerDashboard = () => (\n    <>\n      <Row className=\"mb-4\">\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.totalJobs}</h3>\n              <p>Total Jobs Posted</p>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.activeJobs}</h3>\n              <p>Active Jobs</p>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.totalApplications}</h3>\n              <p>Total Applications</p>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={3}>\n          <Card className=\"stat-card text-center\">\n            <Card.Body>\n              <h3>{dashboardData.applicationsByStatus.shortlisted}</h3>\n              <p>Shortlisted</p>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={6}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Recent Applications</h5>\n            </Card.Header>\n            <Card.Body>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th>Student</th>\n                    <th>Job</th>\n                    <th>Status</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {dashboardData.recentApplications.map(app => (\n                    <tr key={app.id}>\n                      <td>{app.studentName}</td>\n                      <td>{app.jobTitle}</td>\n                      <td>{getStatusBadge(app.status)}</td>\n                      <td>{new Date(app.applicationDate).toLocaleDateString()}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={6}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">My Job Postings</h5>\n            </Card.Header>\n            <Card.Body>\n              {dashboardData.recentJobs.map(job => (\n                <div key={job.id} className=\"border-bottom pb-2 mb-2\">\n                  <h6>\n                    <Link to={`/job/${job.id}`} className=\"text-decoration-none\">\n                      {job.title}\n                    </Link>\n                  </h6>\n                  <small className=\"text-muted\">\n                    {job.applicationsReceived} applications • Posted {new Date(job.postedDate).toLocaleDateString()}\n                  </small>\n                </div>\n              ))}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n\n  return (\n    <Container className=\"mt-4\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <h2>Dashboard</h2>\n        <div>\n          <span className=\"text-muted\">Welcome back, </span>\n          <strong>{user?.name || user?.username || user?.companyName}</strong>\n        </div>\n      </div>\n\n      {userType === 'admin' && renderAdminDashboard()}\n      {userType === 'student' && renderStudentDashboard()}\n      {userType === 'employer' && renderEmployerDashboard()}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}